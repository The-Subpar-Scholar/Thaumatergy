//generated by James's shit Python script
#pragma once
#include <cstdint>
struct Bullet {
    int atkId_Bullet;
    int sfxId_Bullet;
    int sfxId_Hit;
    int sfxId_Flick;
    float life;
    float dist;
    float shootInterval;
    int gravityInRange;
    float gravityOutRange;
    float homingStopRange;
    float initVellocity;
    float accelInRange;
    float accelOutRange;
    float maxVellocity;
    float minVellocity;
    float accelTime;
    float homingBeginDist;
    float hitRadius;
    float hitRadiusMax;
    float spreadTime;
    float expDelay;
    float hormingOffsetRange;
    float dmgHitRecordLifeTime;
    int externalForce;
    int spEffectIDForShooter;
    int autoSearchNPCThinkID;
    int HitBulletID;
    int spEffectId0;
    int spEffectId1;
    int spEffectId2;
    int spEffectId3;
    int spEffectId4;
    short numShoot;
    short homingAngle;
    short shootAngle;
    short shootAngleInterval;
    short shootAngleXInterval;
    int8_t damageDamp;
    int8_t spelDamageDamp;
    int8_t fireDamageDamp;
    int8_t thunderDamageDamp;
    int8_t staminaDamp;
    int8_t knockbackDamp;
    int8_t shootAngleXZ;
    int8_t lockShootLimitAng;
    int8_t isPenetrate;
    int8_t prevVelocityDirRate;
    int8_t atkAttribute;
    int8_t spAttribute;
    int8_t Material_AttackType;
    int8_t Material_AttackMaterial;
    int8_t Material_Size;
    int8_t launchConditionType;
    bool FollowType : 1;                                   // bit offset +0
    bool EmittePosType : 1;                                // bit offset +1
    bool isAttackSFX : 1;                                  // bit offset +2
    bool isEndlessHit : 1;                                 // bit offset +3
    bool camAngleShoot : 1;                                // bit offset +4
    bool isSpawnAtClosestEnemy : 1;                        // bit offset +5
    bool :0;
    bool isPenetrateMap : 1;                               // bit offset +0
    bool isHitBothTeam : 1;                                // bit offset +1
    bool isUseSharedHitList : 1;                           // bit offset +2
    bool isUseMultiDmyPolyIfPlace : 1;                     // bit offset +3
    bool attachEffectType : 1;                             // bit offset +4
    bool isHitForceBullet : 1;                             // bit offset +5
    bool isIgnoreSfxIfHitWater : 1;                        // bit offset +6
    bool isIgnoreMoveStateIfHitWater : 1;                  // bit offset +7
    bool :0;
    bool isHitDarkForceBullet : 1;                         // bit offset +0
    bool spellParriable : 3;                               // bit offset +1
    bool autoFollowTarget : 1;                             // bit offset +4
    int8_t darkDamageDamp;
    int8_t conditionByte;
    int8_t conditionByte1;
    float Z_Homing;
    float homingAngleCameraXY;
    float homingAngleCameraZ;
    int emitterBulletId;
    float emitterShootInterval;
    float emitterSpawnInterval;
private:
    float _0xB8;
public:
    float emitterDelayUntilShot;
private:
    int8_t _0xBD;
public:
    int8_t BulletCreateLimitId;
private:
    int8_t _0xC2;
public:
private:
    bool memBuffer1 : 1;
public:
    bool targetHitstop : 3;                                // bit offset +1
    bool targetPenetrate : 1;                              // bit offset +4
    bool freeAim : 1;                                      // bit offset +5
    bool followTypeNumshoot : 1;                           // bit offset +6
private:
    int _0xC7;
public:
    int objectId;
    float extendDist;
    int8_t extendLife;
    int8_t adjustAngle;
};